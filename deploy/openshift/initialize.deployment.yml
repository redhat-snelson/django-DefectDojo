apiVersion: apps/v1
kind: Deployment
metadata:
  name: initialize-deployment
  labels:
    app: initialize
spec:
  replicas: 1
  selector:
    matchLabels:
      app: initialize
  template:
    metadata:
      labels:
        app: initialize
    spec:
      containers:
      - name: defectdojo-init
        image: "quay.io/hyperkineticnerd/defectdojo-django:latest"
        cmd: ['/wait-for-it.sh', 'mysql.defectdojo.svc:3306', '--', '/entrypoint-initializer.sh']
        # cmd: ['/entrypoint-initializer.sh']
        env:
        - name: DD_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: defectdojo
              key: DD_ADMIN_USER
        - name: DD_ADMIN_MAIL
          valueFrom:
            secretKeyRef:
              name: defectdojo
              key: DD_ADMIN_MAIL
        - name: DD_ADMIN_FIRST_NAME
          valueFrom:
            secretKeyRef:
              name: defectdojo
              key: DD_ADMIN_FIRST_NAME
        - name: DD_ADMIN_LAST_NAME
          valueFrom:
            secretKeyRef:
              name: defectdojo
              key: DD_ADMIN_LAST_NAME
        - name: DD_INITIALIZE
          valueFrom:
            secretKeyRef:
              name: defectdojo
              key: DD_INITIALIZE
        - name: DD_DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: defectdojo
              key: DD_DATABASE_URL
        - name: DD_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: defectdojo
              key: DD_SECRET_KEY
        - name: DD_CREDENTIAL_AES_256_KEY
          valueFrom:
            secretKeyRef:
              name: defectdojo
              key: DD_CREDENTIAL_AES_256_KEY
        resources:
          requests:
            memory: "1Gi"
            cpu: "250m"
          limits:
            memory: "4Gi"
            cpu: "1"
      volumes:
        - name: defectdojo-media
          emptyDir: {}
