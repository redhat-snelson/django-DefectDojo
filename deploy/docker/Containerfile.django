FROM registry.access.redhat.com/ubi8/python-38:1-77@sha256:2b4bac4b01df90158b7ead4352a24a79184ea8c0a8108294cb437ee95a5a34d5 as base

FROM base as django

WORKDIR /app

ARG uid=1001
ARG gid=0
ARG appuser=defectdojo
ENV appuser ${appuser}

USER root

COPY requirements.txt ./
COPY yum_repos/mariadb.repo /etc/yum.repos.d/
COPY \
  docker/entrypoint-celery-beat.sh \
  docker/entrypoint-celery-worker.sh \
  docker/entrypoint-initializer.sh \
  docker/entrypoint-uwsgi.sh \
  docker/entrypoint-uwsgi-dev.sh \
  docker/entrypoint-unit-tests.sh \
  docker/entrypoint-unit-tests-devDocker.sh \
  docker/wait-for-it.sh \
  docker/certs/* \
  /
COPY wsgi.py manage.py docker/unit-tests.sh ./
COPY dojo/ ./dojo/

# Add extra fixtures to docker image which are loaded by the initializer
COPY docker/extra_fixtures/* /app/dojo/fixtures/

COPY tests/ ./tests/

RUN \
    dnf -y install --disableplugin=subscription-manager\
        https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm && \
    rpm --import https://yum.mariadb.org/RPM-GPG-KEY-MariaDB && \
    # rpm --import https://yum.postgresql.org/RPM-GPG-KEY-PGDG && \
    dnf -y install --disableplugin=subscription-manager \
        mariadb \
        mariadb-common \
        postgresql12 \
        bind-utils \
        openjpeg2 \
        xmlsec1 \
        # libtiff \
        # libjpeg-turbo \
        # git \
        && \
    dnf -y clean all && \
    pip3 install \
        --no-cache-dir \
        --upgrade pip \
        && \
    pip3 install \
        --no-cache-dir \
        -r ./requirements.txt

RUN \
  # Remove placeholder copied from docker/certs
  rm -f /readme.txt && \
  # Remove placeholder copied from docker/extra_fixtures
  rm -f dojo/fixtures/readme.txt && \
  mkdir -p dojo/migrations && \
  chmod g=u dojo/migrations && \
  true
# RUN \
#     groupadd --gid ${gid} ${appuser} && \
#     useradd --uid ${uid} --gid ${gid} ${appuser}
RUN \
    chown -R root:root /app && \
    chmod -R u+rwX,go+rX,go-w /app && \
    # Allow for bind mounting local_settings.py and other setting overrides
    chown -R ${uid}:${gid} /app/dojo/settings && \
    chmod -R 775 /app/dojo/settings && \
    mkdir /var/run/${appuser} && \
    chown ${uid}:${gid} /var/run/${appuser} && \
	  chmod g=u /var/run/${appuser} && \
    mkdir -p media/threat && chown -R ${uid} media

USER ${uid}

ENV \
  DD_ADMIN_USER=admin \
  DD_ADMIN_MAIL=admin@defectdojo.local \
  DD_ADMIN_PASSWORD='' \
  DD_ADMIN_FIRST_NAME=Administrator \
  DD_ADMIN_LAST_NAME=User \
  DD_ALLOWED_HOSTS="*" \
  DD_CELERY_BEAT_SCHEDULE_FILENAME="/run/celery-beat-schedule" \
  DD_CELERY_BROKER_SCHEME="amqp" \
  DD_CELERY_BROKER_USER="defectdojo" \
  DD_CELERY_BROKER_PASSWORD="defectdojo" \
  DD_CELERY_BROKER_HOST="rabbitmq" \
  DD_CELERY_BROKER_PORT="5672" \
  DD_CELERY_BROKER_PATH="//" \
  DD_CELERY_LOG_LEVEL="INFO" \
  DD_CELERY_WORKER_POOL_TYPE="solo" \
  # Enable prefork and options below to ramp-up celeryworker performance. Presets should work fine for a machine with 8GB of RAM, while still leaving room.
  # See https://docs.celeryproject.org/en/stable/userguide/workers.html#id12 for more details
  # DD_CELERY_WORKER_POOL_TYPE="prefork" \
  # DD_CELERY_WORKER_AUTOSCALE_MIN="2" \
  # DD_CELERY_WORKER_AUTOSCALE_MAX="8" \
  # DD_CELERY_WORKER_CONCURRENCY="8" \
  # DD_CELERY_WORKER_PREFETCH_MULTIPLIER="128" \
  DD_DATABASE_ENGINE="django.db.backends.mysql" \
  DD_DATABASE_HOST="mysql" \
  DD_DATABASE_NAME="defectdojo" \
  DD_DATABASE_PASSWORD="defectdojo" \
  DD_DATABASE_PORT="3306" \
  DD_DATABASE_USER="defectdojo" \
  DD_INITIALIZE=true \
  DD_UWSGI_MODE="socket" \
  DD_UWSGI_ENDPOINT="0.0.0.0:3031" \
  DD_UWSGI_NUM_OF_PROCESSES="2" \
  DD_UWSGI_NUM_OF_THREADS="2" \
  DD_TRACK_MIGRATIONS="True" \
  DD_DJANGO_METRICS_ENABLED="False"

ENTRYPOINT ["/entrypoint-uwsgi.sh"]
