# code: language=Dockerfile

# The code for the build image should be identical with the code in
# Dockerfile.django to use the caching mechanism of Docker.

# FROM registry.access.redhat.com/ubi8/python-38 as base
# USER root
# FROM base as collectstatic

FROM registry.access.redhat.com/ubi8/nodejs-14 AS collectstatic
WORKDIR /app
USER root

COPY requirements.txt ./
COPY yum_repos/mariadb.repo /etc/yum.repos.d/
RUN \
  rpm --import https://yum.mariadb.org/RPM-GPG-KEY-MariaDB && \
  dnf -y install --disableplugin=subscription-manager \
    mariadb-common \
    mariadb \
    mariadb-connector-c-devel
RUN \
  dnf -y install --disableplugin=subscription-manager \
    https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm && \
  dnf -y install --disableplugin=subscription-manager \
    postgresql12-devel \
    libpq-devel
RUN \
  dnf -y install --disableplugin=subscription-manager \
    https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm && \
  dnf -y install --disableplugin=subscription-manager \
    python3-pip \
    python3-devel
RUN \
  pip3 install \
    --no-cache-dir \
    --upgrade \
    pip && \
  pip3 install \
    --no-cache-dir \
    -r ./requirements.txt

RUN \
  dnf -y clean all

ENV \
  # This will point yarn to whatever version of node you decide to use
  # due to the use of nodejs instead of node name in some distros
  node="nodejs"

RUN \
  npm i -g corepack

COPY components/ ./components/
RUN \
  cd components && \
  yarn

COPY manage.py ./
COPY dojo/ ./dojo/

RUN env DD_SECRET_KEY='.' python3 manage.py collectstatic --noinput && true

FROM registry.access.redhat.com/ubi8/nginx-120
ARG uid=1001
ARG appuser=defectdojo
COPY --from=collectstatic /app/static/ /usr/share/nginx/html/static/
COPY wsgi_params nginx/nginx.conf nginx/nginx_TLS.conf /etc/nginx/
COPY docker/entrypoint-nginx.sh /
USER root
RUN \
  mkdir /var/cache/nginx && \
  chmod -R g=u /var/cache/nginx && \
  mkdir /var/run/defectdojo && \
  chmod -R g=u /var/run/defectdojo && \
  mkdir -p /etc/nginx/ssl && \
  chmod -R g=u /etc/nginx && \
  true
ENV \
  DD_UWSGI_PASS="uwsgi_server" \
  DD_UWSGI_HOST="uwsgi" \
  DD_UWSGI_PORT="3031" \
  GENERATE_TLS_CERTIFICATE="false" \
  USE_TLS="false" \
  NGINX_METRICS_ENABLED="false" \
  METRICS_HTTP_AUTH_USER="" \
  METRICS_HTTP_AUTH_PASSWORD=""
USER ${uid}
EXPOSE 8080
ENTRYPOINT ["/entrypoint-nginx.sh"]

# # Add application sources
# ADD test-app/nginx.conf "${NGINX_CONF_PATH}"
# ADD test-app/nginx-default-cfg/*.conf "${NGINX_DEFAULT_CONF_PATH}"
# ADD test-app/nginx-cfg/*.conf "${NGINX_CONFIGURATION_PATH}"
# ADD test-app/*.html .

# # Run script uses standard ways to run the application
# CMD nginx -g "daemon off;"
